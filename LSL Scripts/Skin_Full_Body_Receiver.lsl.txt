// Skin_Full_Body_Receiver.lsl
// This script will assign skin textures to the RothTooRC1 Mesh body
// This script will alpha hide/show various parts of the RothTooRC1 mesh body

//safe character set for encryption
string ASCII = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
 
//convert integer to characters
string chr(integer i) {
    //llOwnerSay("Chr's="+llGetSubString(ASCII, i, i));
    return llGetSubString(ASCII, i, i);
}

integer min(integer x, integer y) {
    if( y < x ) return y;
    return x;
}

integer max(integer x, integer y) {
    if( y > x ) return y;
    return x;
}

//for generating a random string.
string salt(integer amount) {
    string salt = "";
    integer i;
    //for length of salt , generate characters
    for(i = 0; i < amount; i++) {
        salt += chr((integer)llFrand(llStringLength(ASCII)));
    }
    //llOwnerSay("Salt="+salt);
    return salt;
} 

integer my_channel; // Debugging/misc
integer skin_upper_channel;
integer skin_lower_channel;
integer skin_head_channel;

integer alpha_channel;


string my_pass;
string dMessage;
list listMsgNoSalt;
string msgNoSalt;
list listCmdPrms;
integer intCmdPrmsLength;
string strCommand;
string strCommandParam1 = "";
string strCommandParam2 = "";
string strCommandParam3 = "";
string strCommandParam4 = "";
integer intLinkNum;
string strTUUID;
integer intFace;
integer intAlphaMode = 0;
integer intAlphaLevel;
string strAlphaLevel;
list listPrimAlphaMode;
integer a;
integer b;
integer i;
integer x;
string descflag;
string textureid;
integer useAlphaModes = FALSE;

default {
    state_entry() {
        skin_upper_channel = -677095462;
        skin_lower_channel = -388433722;
        skin_head_channel = -705005084;
        
        alpha_channel = -816372782;


        //my_pass = "SfRQF1VW@nzQMiUHrd#RWmjzVIyz3lWTpEP%yi%C@$3nLn0OGp4Y9HSTbv3*aIiA";
        //my_pass = "YS%G#^UbAKEKsze9D*l#fdC2jhBqQoHbuChBvZAdZ*1mVppN%duN2lL2D4G6Blk1";
        my_pass = "6LQkxERkd5vi#YzN4IGb&T#EbMI8Z&RRhSfUjV1GpIbehlJ8Bps7Kn&Yb!rYN!!&";
        //llOwnerSay("listening on skin channels:"+(string)skin_upper_channel);
        //llOwnerSay("listening on skin channels:"+(string)skin_lower_channel);
        //llOwnerSay("listening on skin channels:"+(string)skin_head_channel);
        //llOwnerSay("listening on slpha channel:"+(string)alpha_channel);
        llListen(skin_upper_channel, "", "", "" );
        llListen(skin_lower_channel, "", "", "" );
        llListen(skin_head_channel, "", "", "" );
        llListen(alpha_channel, "", "", "" );
        
        string ItemName;
        integer intInvCount = llGetInventoryNumber( INVENTORY_NOTECARD );
        if (intInvCount) {
            while (intInvCount--) {
                ItemName = llToUpper(llGetInventoryName(INVENTORY_NOTECARD, intInvCount));
                if (ItemName == "ALLOWALPHAS" ) useAlphaModes = TRUE;
            }
        } else {
            useAlphaModes = FALSE;
        }
    }

    on_rez(integer param) {
        llResetScript();
    }

    listen(integer channel,string name, key id, string message) {
        //llOwnerSay("message="+message+" on channel="+(string)channel);
        if (llGetOwnerKey(id) != llGetOwner()) {
            llOwnerSay("Owners Don't Match");
            return;
        }
        // DeCrypting the data and say back to owner: Remember to remove the salt when needed ;)
        //dMessage = llBase64ToString(llXorBase64(message, llStringToBase64(my_pass))); // SL
        dMessage = llBase64ToString(llXorBase64StringsCorrect(message, llStringToBase64(my_pass))); // OS
        listMsgNoSalt = llParseString2List(dMessage, ["||"], []);
        msgNoSalt = llList2String(listMsgNoSalt, 0);
        //llOwnerSay("msg="+msgNoSalt);
        listCmdPrms = llParseString2List(msgNoSalt, ["::"], []);
        intCmdPrmsLength = llGetListLength(listCmdPrms);
        strCommand = llList2String(listCmdPrms, 0);
        if (intCmdPrmsLength > 1) { strCommandParam1 = llList2String(listCmdPrms, 1); }
        if (intCmdPrmsLength > 2) { strCommandParam2 = llList2String(listCmdPrms, 2); }
        if (intCmdPrmsLength > 3) { strCommandParam3 = llList2String(listCmdPrms, 3); }
        if (intCmdPrmsLength > 4) { strCommandParam4 = llList2String(listCmdPrms, 4); }
        intLinkNum = 0; // 0 is root prim
        intFace = ALL_SIDES; // This may be modified depending on setup of item
        intAlphaLevel = 0;

        //llOwnerSay("Cmd received="+strCommand);
        if (strCommand == "ALPHA") {
            //llOwnerSay("I heard your ALPHA command.");
            string prim2change = llStringTrim(llToUpper(strCommandParam1), STRING_TRIM);
            integer face2change = (integer)strCommandParam2;
            integer alphaval = (integer)strCommandParam3;
            integer i;
            integer x = llGetNumberOfPrims()+1;
            //llOwnerSay("primName:"+prim2change+", face:"+(string)face2change+", alpha:"+(string)alphaval);
            //return;

            for (; i < x; ++i) {
                //list paramlist = llGetObjectDetails(llGetLinkKey(i), [OBJECT_NAME,OBJECT_DESC]);
                //string objdesc = llToUpper(llList2String(paramlist,1));
                list paramlist = llGetObjectDetails(llGetLinkKey(i), [OBJECT_NAME]);
                string objname = llToUpper(llList2String(paramlist,0));

                if (objname == prim2change) {
                    llSetLinkPrimitiveParamsFast(i, [PRIM_COLOR, face2change, <1.0,1.0,1.0>, alphaval]);
                    //llOwnerSay("Body says: Alpha for " + objname + " changed.");
                }
            }
        } else if (strCommand == "ALPHA-ALL") {
            //llOwnerSay("I heard your ALPHA-ALL command.");
            integer i;
            integer x = llGetNumberOfPrims()+1;
            for (; i < x; ++i) {
                llSetLinkPrimitiveParamsFast(i, [PRIM_COLOR, -1, <1.0,1.0,1.0>, 1.0]);
                //llOwnerSay("Body says: Alpha for link#"+(string)i+" changed.");
            }
        } else if (strCommand == "TEXTURE") {
            //if (useAlphaModes) { llOwnerSay("Using Alpha Mode"); } else { llOwnerSay("NOT using Alpha Mode"); }
            if (channel == skin_upper_channel) {
                //llOwnerSay("TEXTURE for upper cmd received");
                // Need to iterate thru all the upper body parts
                descflag = "UPPER";
                textureid = strCommandParam1;
                x = llGetNumberOfPrims()+1;
                for (i = 0; i < x; ++i) {
                    list paramlist = llGetObjectDetails(llGetLinkKey(i), [OBJECT_DESC,OBJECT_NAME]);
                    string objdesc = llToUpper(llList2String(paramlist,0));
                    string objname = llList2String(paramlist,1);
                    if (objdesc == descflag) {
                        //llOwnerSay("I heard your Upper message:"+descflag+" "+objdesc+" "+textureid);
                        llSetLinkPrimitiveParamsFast(i, [PRIM_TEXTURE, ALL_SIDES, textureid, <1,1,0>, <0,0,0>, 0]);
                        //llOwnerSay("Upper says: Changed " + objname + " texture.");
                        if (useAlphaModes) {
                            llSetPrimitiveParams(
                                [PRIM_ALPHA_MODE,ALL_SIDES,intAlphaMode,0,
                                PRIM_COLOR, ALL_SIDES, <1.0, 1.0, 1.0>, 1.0 ]);
                        } else {
                            llSetPrimitiveParams(
                                [PRIM_COLOR, ALL_SIDES, <1.0, 1.0, 1.0>, 1.0 ]);
                        }
                    }
                }
            } else if (channel == skin_lower_channel) {
                //llOwnerSay("TEXTURE for LOWER cmd received");
                // Need to iterate thru all the lower body parts
                descflag = "LOWER";
                textureid = strCommandParam1;
                x = llGetNumberOfPrims()+1;
                for (i = 0; i < x; ++i) {
                    list paramlist = llGetObjectDetails(llGetLinkKey(i), [OBJECT_DESC,OBJECT_NAME]);
                    string objdesc = llToUpper(llList2String(paramlist,0));
                    string objname = llList2String(paramlist,1);
                    if (objdesc == descflag) {
                        //llOwnerSay("I heard your Lower message:"+descflag+" "+objdesc+" "+textureid);
                        llSetLinkPrimitiveParamsFast(i, [PRIM_TEXTURE, ALL_SIDES, textureid, <1,1,0>, <0,0,0>, 0]);
                        //llOwnerSay("Upper says: Changed " + objname + " texture.");
                        if (useAlphaModes) {
                            llSetPrimitiveParams(
                                [PRIM_ALPHA_MODE,ALL_SIDES,intAlphaMode,0,
                                PRIM_COLOR, ALL_SIDES, <1.0, 1.0, 1.0>, 1.0 ]);
                        } else {
                            llSetPrimitiveParams(
                                [PRIM_COLOR, ALL_SIDES, <1.0, 1.0, 1.0>, 1.0 ]);
                        }
                    }
                }
            } else if (channel == skin_head_channel) {
                //llOwnerSay("TEXTURE for HEAD cmd received");
                // Need to texture to head
                descflag = "HEAD";
                textureid = strCommandParam1;
                x = llGetNumberOfPrims()+1;
                for (i = 0; i < x; ++i) {
                    list paramlist = llGetObjectDetails(llGetLinkKey(i), [OBJECT_DESC,OBJECT_NAME]);
                    string objdesc = llToUpper(llList2String(paramlist,0));
                    string objname = llList2String(paramlist,1);
                    if (objdesc == descflag) {
                        //llOwnerSay("I heard your Head message:"+descflag+" "+objdesc+" "+textureid);
                        llSetLinkPrimitiveParamsFast(i, [PRIM_TEXTURE, ALL_SIDES, textureid, <1,1,0>, <0,0,0>, 0]);
                        //llOwnerSay("Upper says: Changed " + objname + " texture.");
                        if (useAlphaModes) {
                            llSetPrimitiveParams(
                                [PRIM_ALPHA_MODE,ALL_SIDES,intAlphaMode,0,
                                PRIM_COLOR, ALL_SIDES, <1.0, 1.0, 1.0>, 1.0 ]);
                        } else {
                            llSetPrimitiveParams(
                                [PRIM_COLOR, ALL_SIDES, <1.0, 1.0, 1.0>, 1.0 ]);
                        }
                    }
                }
            } else { llOwnerSay("ERROR with skin channel used. Channel="+channel); }
        }
    }
}
